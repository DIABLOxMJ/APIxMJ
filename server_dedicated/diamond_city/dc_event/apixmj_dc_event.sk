# =====================================================================================================================
# APIxMJ - Files
# ---------------------------------------------------------------------------------------------------------------------
on load:
	set {_list::*} to mj_manager_skript_list()
	if {_list::*} contains "apixmj_manager.sk" and "apixmj.sk" and "apixmj_dc_core.sk":
		send "[APIxMJ] Loading dc_event..." to console
	else:
		broadcast "[APIxMJ] Script loading cancel It requires (apixmj_manager.sk, apixmj.sk and apixmj_dc_core.sk)"
		unload script file "apixmj_dc_event.sk"
	stop
# ---------------------------------------------------------------------------------------------------------------------
on skript stop:
	rename file "plugins/Skript/scripts/apixmj_dc_event.sk" to "-apixmj_dc_event.sk"
	send "[APIxMJ] Unloading dc_event.."
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Files
# =====================================================================================================================
# APIxMJ - Command
# ---------------------------------------------------------------------------------------------------------------------
command /event:
	executable by: player
	trigger:
		set {_check} to mj_editfiles("diamond_city.config", "data.event")
		set {_lang} to mj_manager_userdata_language({_player})
		set {_list::*} to mj_manager_nodes("diamond_city.language.%{_lang}%", "data.event_info.%{_check}%")
		loop {_list::*}:
			set {_value} to mj_editfiles_gettext("diamond_city", "data.event_info.%{_check}%.%loop-value%", {_player})
			send {_value}
		stop
# ---------------------------------------------------------------------------------------------------------------------
command /score:
	executable by: player
	trigger:
		set {_check} to mj_editfiles("diamond_city.config", "data.event")
		if {_check} is "event_02":
			mj_diamond_city_event_02_board(player)
		stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Command
# =====================================================================================================================
# APIxMJ - Event 01
# ---------------------------------------------------------------------------------------------------------------------
on rightclick:
	set {_check} to mj_editfiles("diamond_city.config", "data.event")
	if {_check} is "event_01":
		set {_region} to mj_editfiles("diamond_city.data", "data.event_01.region")
		if "%region at player%" contains {_region}:
			if player's gamemode isn't creative:
				cancel event
				open workbench view to player
	stop
# ---------------------------------------------------------------------------------------------------------------------
on craft of cake:
	set {_check} to mj_editfiles("diamond_city.config", "data.event")
	if {_check} is "event_01":
		set {_region} to mj_editfiles("diamond_city.data", "data.event_01.region")
		if "%region at player%" contains {_region}:
			mj_manager_message(player, "diamond_city", "data.prefix", "diamond_city", "data.event_01.eat")
		else:
			cancel event
			mj_manager_message(player, "diamond_city", "data.prefix", "diamond_city", "data.event_01.no_craft")
	stop
# ---------------------------------------------------------------------------------------------------------------------
on rightclick:
	if type of event-block is cake:
		set {_check} to mj_editfiles("diamond_city.config", "data.event")
		if {_check} is "event_01":
			set {_loc} to event-location
			wait 2 ticks
			set {_check} to block at {_loc}
			if type of {_check} is air:
				set {_id} to mj_core_id_checker("mystery_box.data", "data", "box_01")
				set {_item} to mj_manager_item_convert("mystery_box.data", "data.%{_id}%.key")
				if chance of 50%:
					give 1 of {_item} to player
					mj_manager_message(player, "diamond_city", "data.prefix", "diamond_city", "data.event_01.success")
					mj_timecount("spawn_%player%", "backward", 0, 0, 1)
	stop
# ---------------------------------------------------------------------------------------------------------------------
on place:
	set {_id} to mj_core_id_checker("mystery_box.data", "data", "box_01")
	set {_item} to mj_manager_item_convert("mystery_box.data", "data.%{_id}%.key")
	if player's tool is {_item}:
		cancel event
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Event 01
# =====================================================================================================================
# APIxMJ - Event 02
# ---------------------------------------------------------------------------------------------------------------------
on craft of moss block:
	set {_check} to mj_editfiles("diamond_city.config", "data.event")
	if {_check} is "event_02":
		set {_stats} to mj_editfiles_number("userdata.%player's uuid%", "data.support.stats.craft.moss_block")
		set {_count} to mj_editfiles_number("temp", "data.event_02.%player's uuid%.craft")
		add 1 to {_count}
		mj_editfiles_number("temp", "data.event_02.%player's uuid%.craft", "modify", {_count})
		mj_editfiles_number("temp", "data.event_02.%player's uuid%.total", "modify", {_stats})
		mj_diamond_city_event_02_give(player)
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_diamond_city_event_02_give(player: player):
	loop 5 times:
		set {_count} to mj_editfiles_number("temp", "data.event_02.%{_player}'s uuid%.craft")
		if {_count} >= 15:
			set {_id} to mj_core_id_checker("mystery_box.data", "data", "box_02")
			set {_item} to mj_manager_item_convert("mystery_box.data", "data.%{_id}%.key")
			give 1 of {_item} to {_player}
			remove 15 from {_count}
			mj_editfiles_number("temp", "data.event_02.%{_player}'s uuid%.craft", "modify", {_count})
			set {_stats} to mj_editfiles_number("userdata.%{_player}'s uuid%", "data.support.stats.craft.moss_block")
			mj_manager_message({_player}, "diamond_city", "data.prefix", "diamond_city", "data.event_02.craft_limit", "%{_stats}%")
			mj_manager_message({_player}, "diamond_city", "data.prefix", "diamond_city", "data.event_02.success")
		else:
			exit loop
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_diamond_city_event_02_board(player: player):
	set {_list::*} to mj_manager_nodes("temp", "data.event_02")
	loop {_list::*}:
		set {_value.1} to loop-value parsed as offlineplayer
		set {_value.2} to mj_editfiles_number("temp", "data.event_02.%{_value.1}'s uuid%.total")
		mj_manager_message({_player}, "diamond_city", "data.prefix", "diamond_city", "data.event_02.board", "%{_value.1}%", "%{_value.2}%")
	stop
# ---------------------------------------------------------------------------------------------------------------------
on place:
	set {_id} to mj_core_id_checker("mystery_box.data", "data", "box_02")
	set {_item} to mj_manager_item_convert("mystery_box.data", "data.%{_id}%.key")
	if player's tool is {_item}:
		cancel event
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Event 02
# =====================================================================================================================
# APIxMJ - Event 03
# ---------------------------------------------------------------------------------------------------------------------
on craft of cookie:
	set {_check} to mj_editfiles("diamond_city.config", "data.event")
	if {_check} is "event_03":
		set {_region} to mj_editfiles("diamond_city.data", "data.event_01.region")
		if "%region at player%" contains {_region}:
			set {_stats} to mj_editfiles_number("userdata.%player's uuid%", "data.support.stats.craft.8_cookies")
			set {_count} to mj_editfiles_number("temp", "data.event_03.%player's uuid%.craft")
			add 1 to {_count}
			mj_editfiles_number("temp", "data.event_03.%player's uuid%.craft", "modify", {_count})
			mj_editfiles_number("temp", "data.event_03.%player's uuid%.total", "modify", {_stats})
			mj_diamond_city_event_03_give(player)
		else:
			cancel event
			mj_manager_message(player, "diamond_city", "data.prefix", "diamond_city", "data.event_01.no_craft")
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_diamond_city_event_03_give(player: player):
	loop 5 times:
		set {_count} to mj_editfiles_number("temp", "data.event_03.%{_player}'s uuid%.craft")
		if {_count} >= 16:
			set {_id} to mj_core_id_checker("mystery_box.data", "data", "box_03")
			set {_item} to mj_manager_item_convert("mystery_box.data", "data.%{_id}%.key")
			give 1 of {_item} to {_player}
			remove 16 from {_count}
			mj_editfiles_number("temp", "data.event_03.%{_player}'s uuid%.craft", "modify", {_count})
			set {_stats} to mj_editfiles_number("userdata.%{_player}'s uuid%", "data.support.stats.craft.8_cookies")
			mj_manager_message({_player}, "diamond_city", "data.prefix", "diamond_city", "data.event_02.success")
		else:
			exit loop
	stop
# ---------------------------------------------------------------------------------------------------------------------
on place:
	set {_id} to mj_core_id_checker("mystery_box.data", "data", "box_03")
	set {_item} to mj_manager_item_convert("mystery_box.data", "data.%{_id}%.key")
	if player's tool is {_item}:
		cancel event
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Event 03
# =====================================================================================================================
# =====================================================================================================================
# APIxMJ - Files
# ---------------------------------------------------------------------------------------------------------------------
on load:
	set {_list::*} to mj_manager_skript_list()
	if {_list::*} contains "apixmj_manager.sk" and "apixmj.sk" and "apixmj_dc_core.sk":
		send "[APIxMJ] Loading dc_event..." to console
	else:
		broadcast "[APIxMJ] Script loading cancel It requires (apixmj_manager.sk, apixmj.sk and apixmj_dc_core.sk)"
		unload script file "apixmj_dc_event.sk"
	stop
# ---------------------------------------------------------------------------------------------------------------------
on skript stop:
	rename file "plugins/Skript/scripts/apixmj_dc_event.sk" to "-apixmj_dc_event.sk"
	send "[APIxMJ] Unloading dc_event.."
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Files
# =====================================================================================================================
# APIxMJ - Command
# ---------------------------------------------------------------------------------------------------------------------
command /event:
	executable by: player
	trigger:
		set {_check} to mj_editfiles("diamond_city.config", "data.event")
		set {_lang} to mj_manager_userdata_language({_player})
		set {_list::*} to mj_manager_nodes("diamond_city.language.%{_lang}%", "data.event_info.%{_check}%")
		loop {_list::*}:
			set {_value} to mj_editfiles_gettext("diamond_city", "data.event_info.%{_check}%.%loop-value%", {_player})
			send {_value}
		stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Command
# =====================================================================================================================
# APIxMJ - Event 01
# ---------------------------------------------------------------------------------------------------------------------
on rightclick:
	set {_check} to mj_editfiles("diamond_city.config", "data.event")
	if {_check} is "event_01":
		set {_region} to mj_editfiles("diamond_city.data", "data.event_01.region")
		if "%region at player%" contains {_region}:
			if player's gamemode isn't creative:
				cancel event
				open workbench view to player
	stop
# ---------------------------------------------------------------------------------------------------------------------
on crafting of cake:
	set {_check} to mj_editfiles("diamond_city.config", "data.event")
	if {_check} is "event_01":
		set {_region} to mj_editfiles("diamond_city.data", "data.event_01.region")
		if "%region at player%" contains {_region}:
			mj_manager_message(player, "diamond_city", "data.prefix", "diamond_city", "data.event_01.eat")
		else:
			cancel event
			mj_manager_message(player, "diamond_city", "data.prefix", "diamond_city", "data.event_01.no_craft")
	stop
# ---------------------------------------------------------------------------------------------------------------------
on rightclick:
	if type of event-block is cake:
		set {_check} to mj_editfiles("diamond_city.config", "data.event")
		if {_check} is "event_01":
			#set {_name} to mj_timecount_text("event_%player%", "name")
			#if {_name} is "none":
			set {_loc} to event-location
			wait 2 ticks
			set {_check} to block at {_loc}
			if type of {_check} is air:
				set {_id} to mj_core_id_checker("mystery_box.data", "data", "box_01")
				set {_item} to mj_manager_item_convert("mystery_box.data", "data.%{_id}%.key")
				if chance of 50%:
					give 1 of {_item} to player
					mj_manager_message(player, "diamond_city", "data.prefix", "diamond_city", "data.event_01.success")
					mj_timecount("spawn_%player%", "backward", 0, 0, 1)
			#else:
			#	set {_time} to mj_timecount_viewer("event_%player%")
			#	mj_manager_message(player, "diamond_city", "data.prefix", "core", "data.time.wait", {_time})
	stop
# ---------------------------------------------------------------------------------------------------------------------
on place:
	set {_id} to mj_core_id_checker("mystery_box.data", "data", "box_01")
	set {_item} to mj_manager_item_convert("mystery_box.data", "data.%{_id}%.key")
	if player's tool is {_item}:
		cancel event
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Event 01
# =====================================================================================================================
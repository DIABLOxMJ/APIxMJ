# =====================================================================================================================
# APIxMJ - Files
# ---------------------------------------------------------------------------------------------------------------------
function mj_files_menu():
	set {_folder} to mj_editfiles("manager.data", "data.addon.vertebral_extension.menu.folder")
	load yaml "plugins/APIxMJ/%{_folder}%/config.yml" as "mj.menu.config"
	load yaml "plugins/APIxMJ/%{_folder}%/data.yml" as "mj.menu.data"
	set {_list::*} to mj_editfiles_list("manager.config", "data.language.list")
	if {_list::*} is set:
		loop {_list::*}:
			load yaml "plugins/APIxMJ/%{_folder}%/language/%loop-value%.yml" as "mj.menu.language.%loop-value%"
			load yaml "plugins/APIxMJ/%{_folder}%/help/%loop-value%.yml" as "mj.menu.help.%loop-value%"
	stop
# ---------------------------------------------------------------------------------------------------------------------
on load:
	set {_list::*} to mj_manager_skript_list()
	if {_list::*} contains "apixmj_manager.sk" and "apixmj_core.sk":
		send "[APIxMJ] Loading menu..." to console
		mj_files_menu()
	else:
		broadcast "[APIxMJ] Script loading cancel It requires (apixmj_manager.sk and apixmj_core.sk)"
		unload script file "apixmj_menu.sk"
	stop
# ---------------------------------------------------------------------------------------------------------------------
on skript stop:
	rename file "plugins/Skript/scripts/apixmj_menu.sk" to "-apixmj_menu.sk"
	send "[APIxMJ] Unloading menu.."
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Files
# =====================================================================================================================
# APIxMJ - Command
# ---------------------------------------------------------------------------------------------------------------------
command /menu:
	executable by: player
	trigger:
		mj_menu(player)
		stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Command
# =====================================================================================================================
# APIxMJ - Function
# ---------------------------------------------------------------------------------------------------------------------
function mj_menu(player: player):
	set {_title} to mj_editfiles_gettext("menu", "data.title", {_player})
	set {_type} to mj_editfiles("menu.config", "data.gui_option.type")
	set {_size} to mj_editfiles_number("menu.config", "data.gui_option.size")
	set {_item} to mj_manager_item_convert("menu.config", "data.gui_option.item")
	mj_core_gui_generator({_player}, {_size}, true, {_type}, {_title}, "menu", {_item})
	wait 2 ticks
	set {_list::*} to mj_manager_nodes("menu.data")
	loop {_list::*}:
		mj_menu_item({_player}, loop-value)
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_menu_item(player: player, value: text):
	set {_lang} to mj_manager_userdata_language({_player})
	set {_name} to mj_editfiles_gettext("menu", "data.object.%{_value}%.name", {_player})
	set {_slot} to mj_editfiles_number("menu.data", "data.%{_value}%.slot")
	set {_command} to mj_editfiles("menu.data", "data.%{_value}%.command")
	set {_close} to mj_editfiles_boolean("menu.data", "data.%{_value}%.close")
	set {_item.1} to mj_manager_item_convert("menu.data", "data.%{_value}%.item")
	set {_count} to 1
	set {_list::*} to mj_manager_nodes("menu.language.%{_lang}%", "data.object.%{_value}%.lore")
	loop {_list::*}:
		set {_view} to mj_editfiles_gettext("menu", "data.%{_value}%.lore.%loop-value%", {_player})
		set line {_count} of lore of {_item.1} to {_view}
		add 1 to {_count}
	set {_item.2} to mj_manager_item_button({_player}, {_item.1}, "left_click", "menu", "data.object.%{_value}%.click")
	if {_close} is true:
		make a gui slot {_slot} of {_player} with {_item.2} named {_name} to close:
			{_player} command {_command}
			stop
	else:
		make a gui slot {_slot} of {_player} with {_item.2} named {_name} to run:
			{_player} command {_command}
			stop
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Function
# =====================================================================================================================
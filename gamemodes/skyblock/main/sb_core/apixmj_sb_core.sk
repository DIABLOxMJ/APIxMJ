# =====================================================================================================================
# APIxMJ - Files
# ---------------------------------------------------------------------------------------------------------------------
function mj_files_sb_core():
	set {_folder} to mj_editfiles("manager.data", "data.addon.gamemodes_skyblock_main.sb_core.folder")
	load yaml "plugins/APIxMJ/%{_folder}%/config.yml" as "mj.sb_core.config"
	load yaml "plugins/APIxMJ/%{_folder}%/data.yml" as "mj.sb_core.data"
	load yaml "plugins/APIxMJ/%{_folder}%/temp.yml" as "mj.sb_core.temp"
	load yaml "plugins/APIxMJ/%{_folder}%/menu.yml" as "mj.sb_core.menu"
	load yaml "plugins/APIxMJ/%{_folder}%/level.yml" as "mj.sb_core.level"
	load yaml "plugins/APIxMJ/%{_folder}%/preset.yml" as "mj.sb_core.preset"
	load yaml "plugins/APIxMJ/%{_folder}%/upgrade.yml" as "mj.sb_core.upgrade"
	set {_list::*} to mj_editfiles_list("manager.config", "data.language.list")
	if {_list::*} is set:
		loop {_list::*}:
			load yaml "plugins/APIxMJ/%{_folder}%/language/%loop-value%.yml" as "mj.sb_core.language.%loop-value%"
			load yaml "plugins/APIxMJ/%{_folder}%/help/%loop-value%.yml" as "mj.sb_core.help.%loop-value%"
	loop all players:
		mj_sb_core_playerdata(loop-player)
	stop
# ---------------------------------------------------------------------------------------------------------------------
on load:
	set {_list::*} to mj_manager_skript_list()
	if {_list::*} contains "apixmj_manager.sk" and "apixmj_core.sk" and "apixmj_essentials.sk":
		send "[APIxMJ] Loading sb_core..." to console
		mj_files_sb_core()
		load script file "apixmj_sb_core_level.sk"
	else:
		broadcast "[APIxMJ] Script loading cancel It requires (apixmj_manager.sk, apixmj_core.sk and apixmj_essentials.sk)"
		unload script file "apixmj_sb_core.sk"
	stop
# ---------------------------------------------------------------------------------------------------------------------
on skript stop:
	rename file "plugins/Skript/scripts/apixmj_sb_core.sk" to "-apixmj_sb_core.sk"
	send "[APIxMJ] Unloading sb_core.."
	stop
# ---------------------------------------------------------------------------------------------------------------------
on join:
	if event-entity is player:
		mj_sb_core_playerdata(player)
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_sb_core_playerdata(player: offlineplayer):
	wait 15 seconds
	set {_profil} to yaml value "data.%{_player}'s uuid%.profil" from "mj.userdata"
	set {_check.1} to yaml value "data.%{_player}'s uuid%.source.skyblock" from "mj.userdata"
	if {_check.1} isn't set:
		set yaml value "data.%{_player}'s uuid%.source.skyblock.island.1" from "mj.userdata" to "none"
		set yaml value "data.%{_player}'s uuid%.source.skyblock.island.2" from "mj.userdata" to "none"
		set yaml value "data.%{_player}'s uuid%.source.skyblock.island.3" from "mj.userdata" to "none"
		save yaml "mj.userdata"
		mj_core_logger(1, "%{_player}% skyblock data file was generated..")
	set {_check.2} to yaml value "data.source.skyblock" from "mj.userdata.%{_player}'s uuid%.%{_profil}%"
	if {_check.2} isn't set:
		set yaml value "data.source.skyblock" from "mj.userdata.%{_player}'s uuid%.%{_profil}%" to "none"
		save yaml "mj.userdata.%{_player}'s uuid%.%{_profil}%"
		mj_core_logger(1, "%{_player}% skyblock data was generated..")
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Files
# =====================================================================================================================
# APIxMJ - Command
# ---------------------------------------------------------------------------------------------------------------------
command /skyblock [<text>] [<text>]:
	aliases: sb, island, is
	executable by: player
	trigger:
		if player has permission "*" or "mj.*" or "mj.skyblock.*" or "mj.skyblock":
			if arg-1 is set:
				if arg-1 is "menu":
					mj_skyblock_menu(player)
				else if arg-1 is "delete":
					mj_skyblock_delete(player)
				else if arg-1 is "create":
					mj_skyblock_menu_create(player)
				else if arg-1 is "invite":
					mj_skyblock_guest_invite(player, arg-2 parsed as offlineplayer)
				else if arg-1 is "join" or "refuse":
					if arg-1 is "join":
						mj_skyblock_guest_join(player)
					else:
						mj_skyblock_guest_refuse(player)
				else:
					mj_manager_message(player, "sb_core", "data.prefix", "manager", "data.argument.name")
			else:
				mj_skyblock_menu(player)
		else:
			mj_manager_permission(player, "sb_core", "data.prefix", "mj.skyblock")
		stop
# ---------------------------------------------------------------------------------------------------------------------
on tab complete of "/skyblock" or "/sb" or "/island" or "/is":
	if player has permission "*" or "mj.*" or "mj.skyblock.*" or "mj.skyblock":
		set tab completions for position 1 to "menu", "delete", "invite", "join", "refuse" and "reload"
		set {_player::*} to all players
		if tab arg-1 is "invite":
			set tab completions for position 2 to {_player::*}
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Command
# =====================================================================================================================
# APIxMJ - Menu
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu(player: player):
	set {_check} to mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.1")
	if {_check} isn't "none":
		mj_skyblock_menu_main({_player})
	else:
		mj_skyblock_menu_create({_player})
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Menu
# =====================================================================================================================
# APIxMJ - Menu (Create)
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_create(player: player):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.create.title", {_player})
	mj_core_gui_generator({_player}, 3, true, "default", {_name}, "skyblock_create")
	mj_skyblock_menu_create_button({_player})
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_create_button(player: player):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.create.button.choice.name", {_player})
	set {_slot} to mj_editfiles_number("sb_core.menu", "data.create.button.new_island.slot")
	set {_item.1} to mj_manager_item_convert("sb_core.menu", "data.create.button.new_island.item")
	set {_item.2} to mj_manager_item_description({_player}, {_item.1}, "data.menu.create.button.choice", "sb_core")
	set {_item.3} to mj_manager_item_button({_player}, {_item.2}, "left_click", "sb_core", "data.menu.create.button.choice.confirm")
	make a gui slot {_slot} of {_player} with {_item.3} named {_name} to run:
		mj_skyblock_menu_create_choice({_player})
		stop
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_create_choice(player: player, slot.1: number=1):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.create.title", {_player})
	mj_core_gui_generator({_player}, 5, true, "default", {_name}, "skyblock_create")
	set {_list::*} to mj_manager_nodes("sb_core.preset", "data")
	loop {_list::*}:
		set {_value} to loop-value
		set {_item} to mj_skyblock_menu_create_choice_button({_player}, {_value})
		set {_slot.2} to mj_editfiles_number("sb_core.preset", "data.%{_value}%.slot")
		make a gui slot {_slot.2} of {_player} with {_item} to close:
			set {_check} to mj_skyblock_island_count({_player})
			if {_check} isn't 0:
				set {_money} to mj_essentials_money_modify({_player})
				set {_price} to mj_core_money_converter("sb_core.preset", "data.%{_value}%")
				if {_money} >= {_price}:
					mj_manager_message({_player}, "sb_core", "data.prefix", "sb_core", "data.menu.create.button.choice.success")
					mj_skyblock_create({_player}, {_value}, {_slot.1})
					mj_essentials_money_system({_player}, {_price}, false, "buy island", {_discount})
				else:
					set {_request.1} to  {_price} - {_money}
					set {_request.2} to mj_core_money_viewer({_request.1})
					mj_manager_message({_player}, "sb_core", "data.prefix", "essentials", "data.money.no_enough", {_request.2})
			else:
				mj_manager_message({_player}, "sb_core", "data.prefix", "sb_core", "data.menu.create.button.choice.success")
				mj_skyblock_create({_player}, {_value}, {_slot.1})
			stop
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_create_choice_button(player: player, value: text) :: item:
	set {_name} to mj_editfiles_gettext("sb_core", "data.preset.%{_value}%.name", {_player})
	set {_item.1} to mj_manager_item_convert("sb_core.preset", "data.%{_value}%.item")
	set {_item.2} to {_item.1} named {_name}
	set {_option.1} to mj_editfiles("sb_core.preset", "data.%{_value}%.difficulty")
	set {_option.2} to mj_editfiles_gettext("sb_core", "data.difficulty.%{_option.1}%", {_player})
	set {_option.3} to mj_editfiles_gettext("sb_core", "data.menu.option.difficulty", {_player}, {_option.2})
	set line 2 of lore of {_item.2} to {_option.3}
	set {_item.3} to mj_manager_item_description({_player}, {_item.2}, "data.preset.%{_value}%", "sb_core")
	set {_price.1} to mj_core_money("sb_core.preset", "data.%{_value}%")
	set {_price.2} to mj_core_money("sb_core.preset", "data.%{_value}%", true)
	set {_check} to mj_skyblock_island_count({_player})
	if {_check} is 0:
		set {_free} to mj_editfiles_boolean("sb_core.preset", "data.%{_value}%.free")
		if {_free} is true:
			set {_price.1} to mj_core_money("sb_core.config", "data.free")
			set {_price.2} to mj_core_money("sb_core.config", "data.free", true)
	set {_count} to mj_manager_item_lore_count({_item.3})
	set {_option.4} to mj_editfiles_gettext("sb_core", "data.menu.create.button.choice.price", {_player}, "%{_price.1}%")
	set line {_count} of lore of {_item.3} to {_option.4}

	if {_free} isn't true:
		set {_money} to mj_essentials_money_modify({_player})
		set {_price.3} to mj_core_money_converter("sb_core.preset", "data.%{_value}%")
		if {_money} >= {_price.3}:
			set {_item.4} to mj_manager_item_button({_player}, {_item.3}, "left_click", "sb_core", "data.menu.create.button.choice.option.1", false, {_price.2})
		else:
			set {_item.4} to mj_manager_item_button({_player}, {_item.3}, "left_click", "sb_core", "data.menu.create.button.choice.option.2")
	else:
		set {_item.4} to mj_manager_item_button({_player}, {_item.3}, "left_click", "sb_core", "data.menu.create.button.choice.option.1", false, {_price.2})
	return {_item.4}
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_create(player: player, preset: text="none", slot: number=1):
	set {_format} to mj_editfiles("sb_core.config", "data.format.player_world")
	set {_world} to mj_editfiles("sb_core.preset", "data.%{_preset}%.world")
	set {_id} to "%{_format}%_%{_player}%_%{_slot}%"
	console command "/mv clone %{_world}% %{_id}%"
	wait 5 seconds
	set {_x} to mj_editfiles_number("sb_core.preset", "data.%{_preset}%.location.x")
	set {_y} to mj_editfiles_number("sb_core.preset", "data.%{_preset}%.location.y")
	set {_z} to mj_editfiles_number("sb_core.preset", "data.%{_preset}%.location.z")
	set {_r} to mj_editfiles_number("sb_core.preset", "data.%{_preset}%.location.r")
	set {_loc} to location({_x}, {_y}, {_z}, ("%{_id}%" parsed as world), {_r}, 0)
	teleport {_player} to {_loc}
	mj_manager_message({_player}, "sb_core", "data.prefix", "sb_core", "data.return_island")
	wait 4 ticks
	set time of {_player}'s world to 06:00
	set weather of {_player}'s world to sun
	set {_border} to mj_editfiles_number("sb_core.upgrade", "data.worldborder.1.size")
	{_player} command "/worldborder set %{_border}%" with permission "*"
	mj_skyblock_create_data({_player}, {_preset}, {_slot})
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_create_data(player: player, preset: text="none", slot: number=1):
	set {_format} to mj_editfiles("sb_core.config", "data.format.player_world")
	set {_id} to "%{_format}%_%{_player}%_%{_slot}%"
	set yaml value "data.world.%{_id}%.loaded" from "mj.sb_core.data" to true
	set yaml value "data.world.%{_id}%.owner" from "mj.sb_core.data" to {_player}'s uuid
	set yaml value "data.world.%{_id}%.member" from "mj.sb_core.data" to "none"
	set yaml value "data.world.%{_id}%.preset" from "mj.sb_core.data" to {_preset}
	set yaml value "data.world.%{_id}%.public" from "mj.sb_core.data" to false
	set yaml value "data.world.%{_id}%.rate.level" from "mj.sb_core.data" to 0
	set yaml value "data.world.%{_id}%.rate.point" from "mj.sb_core.data" to 0
	set yaml value "data.world.%{_id}%.upgrade.worldborder" from "mj.sb_core.data" to 1
	set yaml value "data.world.%{_id}%.upgrade.member" from "mj.sb_core.data" to 1
	set yaml value "data.world.%{_id}%.upgrade.warp" from "mj.sb_core.data" to 1
	set yaml value "data.world.%{_id}%.bonus.experience" from "mj.sb_core.data" to 0
	save yaml "mj.sb_core.data"
	mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.%{_slot}%", "modify", {_id})
	mj_core_location("sb_core.data", "data.world.%{_id}%.spawn", "modify", {_player})
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Menu (Create)
# =====================================================================================================================
# APIxMJ - Menu (Delete)
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_delete(player: player):
	set {_count} to 0
	loop 3 times:
		add 1 to {_count}
		set {_world} to mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.%{_count}%")
		if "%{_world}%" is "%{_player}'s world%":
			console command "/mv delete %{_world}%"
			wait 10 ticks
			console command "/mv confirm"
			mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.%{_count}%", "modify", "none")
			mj_editfiles("sb_core.data", "data.world.%{_world}%", "delete")
			send "DEBUG : World Deleted (%{_world}%)" to {_player}
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Menu (Delete)
# =====================================================================================================================
# APIxMJ - Menu (Main)
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_main(player: player):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.main.title", {_player})
	mj_core_gui_generator({_player}, 6, true, "default", {_name}, "sb_menu_main")
	set {_list.1::*} to mj_manager_nodes("sb_core.menu", "data.main.button")
	loop {_list.1::*}:
		set {_value} to loop-value-1
		if {_value} isn't "return":
			set {_list.2::*} to mj_manager_nodes("userdata", "data.%{_player}'s uuid%.source.skyblock.island")
			loop {_list.2::*}:
				set {_world} to mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.%loop-value-2%")
				if "%{_player}'s world%" is {_world}:
					mj_skyblock_menu_main_button_generator({_player}, {_value}, true)
					exit loop
				else:
					mj_skyblock_menu_main_button_generator({_player}, {_value})
					exit loop
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_main_button_generator(player: player, source: text, check.1: boolean=false):
	if {_source} is "teleport":
		set {_check.1} to true
	set {_check.2} to mj_editfiles_boolean("sb_core.menu", "data.main.button.%{_source}%.island")
	if {_check.1} is {_check.2}:
		set {_slot} to mj_editfiles_number("sb_core.menu", "data.main.button.%{_source}%.slot")
		set {_item} to mj_skyblock_menu_main_button_item_generator({_player}, {_source})
		make a gui slot {_slot} of {_player} with {_item} to run:
			if {_source} is "settings":
				mj_skyblock_menu_settings({_player})
			else if {_source} is "upgrade":
				mj_skyblock_menu_upgrade({_player})
			else if {_source} is "board":
				mj_skyblock_menu_board({_player})
			else:
				mj_skyblock_menu_teleport({_player})
			stop
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_main_button_item_generator(player: player, source: text) :: item:
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.main.button.%{_source}%.name", {_player})
	set {_item.1} to mj_manager_item_convert("sb_core.menu", "data.main.button.%{_source}%.item")
	set {_item.2} to {_item.1} named {_name}
	set {_item.3} to mj_manager_item_description({_player}, {_item.2}, "data.menu.main.button.%{_source}%", "sb_core")
	set {_item.4} to mj_manager_item_button({_player}, {_item.3}, "left_click", "sb_core", "data.menu.main.button.%{_source}%.button")
	return {_item.4}
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_return(player: player, slot: number=0):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.main.button.return.name", {_player})
	set {_item.1} to mj_manager_item_convert("sb_core.menu", "data.main.button.return.item")
	set {_item.2} to mj_manager_item_button({_player}, {_item.1}, "left_click", "sb_core", "data.menu.main.button.return.button")
	make a gui slot {_slot} of {_player} with {_item.2} named {_name} to run:
		mj_skyblock_menu_main({_player})
		stop
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Menu (Main)
# =====================================================================================================================
# APIxMJ - Menu (Main Teleport)
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_teleport(player: player):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.main_teleport.title", {_player})
	mj_core_gui_generator({_player}, 6, true, "default", {_name}, "sb_menu_teleport")
	mj_skyblock_menu_teleport_button_island({_player})
	mj_skyblock_menu_teleport_button_spawn({_player})
	mj_skyblock_menu_teleport_button_unknown({_player})
	mj_skyblock_menu_return({_player}, 49)
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_teleport_button_island(player: player):
	set {_count} to 0
	set {_list::*} to mj_manager_nodes("sb_core.menu", "data.main_teleport.button")
	loop {_list::*}:
		set {_value} to loop-value
		if {_value} contains "island":
			add 1 to {_count}
			set {_world} to mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.%{_count}%")
			if {_world} isn't "none":
				set {_name} to mj_editfiles_gettext("sb_core", "data.menu.main_teleport.button.island_%{_count}%.name")
				set {_slot} to mj_editfiles_number("sb_core.menu", "data.main_teleport.button.island_%{_count}%.slot")
				set {_item.1} to mj_manager_item_convert("sb_core.menu", "data.main_teleport.button.island_%{_count}%.item")
				set {_item.2} to mj_manager_item_description({_player}, {_item.1}, "data.menu.main_teleport.button.island_%{_count}%", "sb_core")
				set {_item.3} to mj_manager_item_button({_player}, {_item.2}, "left_click", "sb_core", "data.menu.main_teleport.button.island_%{_count}%.button")
				make a gui slot {_slot} of {_player} with {_item.3} named {_name} to run:
					close {_player}'s inventory
					set {_loc} to mj_core_location("sb_core.data", "data.world.%{_world}%.spawn")
					teleport {_player} to {_loc}
					stop
			else:
				mj_skyblock_menu_teleport_button_island_buy({_player}, {_count})
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_teleport_button_island_buy(player: player, count: number):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.main_teleport.button.purchase.name")
	set {_slot} to mj_editfiles_number("sb_core.menu", "data.main_teleport.button.island_%{_count}%.slot")
	set {_item.1} to mj_manager_item_convert("sb_core.menu", "data.main_teleport.button.purchase.item")
	set {_item.2} to mj_manager_item_description({_player}, {_item.1}, "data.menu.main_teleport.button.purchase", "sb_core")
	set {_item.3} to mj_manager_item_button({_player}, {_item.2}, "left_click", "sb_core", "data.menu.main_teleport.button.purchase.button")
	make a gui slot {_slot} of {_player} with {_item.3} named {_name} to run:
		mj_skyblock_menu_create_choice({_player}, {_count})
		stop
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_teleport_button_spawn(player: player):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.main_teleport.button.spawn.name")
	set {_slot} to mj_editfiles_number("sb_core.menu", "data.main_teleport.button.spawn.slot")
	set {_item.1} to mj_manager_item_convert("sb_core.menu", "data.main_teleport.button.spawn.item")
	set {_item.2} to mj_manager_item_description({_player}, {_item.1}, "data.menu.main_teleport.button.spawn", "sb_core")
	set {_item.3} to mj_manager_item_button({_player}, {_item.2}, "left_click", "sb_core", "data.menu.main_teleport.button.spawn.button")
	make a gui slot {_slot} of {_player} with {_item.3} named {_name} to run:
		set {_loc} to mj_core_location("essentials.data", "data.spawn")
		teleport {_player} to {_loc}
		stop
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_teleport_button_unknown(player: player):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.main_teleport.button.unknown.name")
	set {_item.1} to mj_manager_item_convert("sb_core.menu", "data.main_teleport.button.unknown_01.item")
	set {_item.2} to mj_manager_item_description({_player}, {_item.1}, "data.menu.main_teleport.button.unknown", "sb_core")
	set {_item.3} to mj_manager_item_button({_player}, {_item.2}, "left_click", "sb_core", "data.menu.main_teleport.button.unknown.button")
	set {_list::*} to mj_manager_nodes("sb_core.menu", "data.main_teleport.button")
	loop {_list::*}:
		set {_value} to loop-value
		if {_value} contains "unknown":
			set {_slot} to mj_editfiles_number("sb_core.menu", "data.main_teleport.button.%{_value}%.slot")
			make a gui slot {_slot} of {_player} with {_item.3} named {_name} to run:
				stop
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Menu (Main Teleport)
# =====================================================================================================================
# APIxMJ - Menu (Main Upgrade) A FUSIONNER POUR OPTIMISER LE CODE EN UN SEUL BLOC
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_upgrade(player: player):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.main_upgrade.title", {_player})
	mj_core_gui_generator({_player}, 6, true, "default", {_name}, "sb_menu_upgrade")
	set {_list::*} to mj_manager_nodes("userdata", "data.%{_player}'s uuid%.source.skyblock.island")
	loop {_list::*}:
		set {_world} to mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.%loop-value%")
		if "%{_player}'s world%" is {_world}:
			mj_skyblock_menu_upgrade_button_generator({_player})
	mj_skyblock_menu_return({_player}, 49)
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_upgrade_button_generator(player: player):
	set {_list.1::*} to mj_manager_nodes("sb_core.upgrade")
	loop {_list.1::*}:
		set {_source.1} to loop-value-1
		set {_list.2::*} to mj_manager_nodes("sb_core.upgrade", "data.%{_source.1}%")
		loop {_list.2::*}:
			set {_source.2} to loop-value-2 parsed as number
			if {_source.1} is "worldborder":
				mj_skyblock_menu_upgrade_worldborder({_player}, {_source.2})
			else if {_source.1} is "member":
				mj_skyblock_menu_upgrade_member({_player}, {_source.2})
			else if {_source.1} is "warp":
				mj_skyblock_menu_upgrade_warp({_player}, {_source.2})
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_upgrade_item_description(player: player, item: item, type: text) :: item:
	set {_lang} to mj_manager_userdata_language({_player})
	set {_count} to mj_manager_item_lore_count({_item})
	set {_list::*} to mj_manager_nodes("sb_core.language.%{_lang}%", "data.menu.main_upgrade.button.%{_type}%.lore")
	loop {_list::*}:
		set {_data.2} to mj_editfiles_gettext("sb_core", "data.menu.main_upgrade.button.%{_type}%.lore.%loop-value%", {_player})
		set line {_count} of lore of {_item} to "%{_data.2}%"
		add 1 to {_count}
	return {_item}
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_upgrade_item_request(player: player, item: item, type: text, value.1: text, value.2: text="none") :: item:
	set {_count} to mj_manager_item_lore_count({_item})
	remove 1 from {_count}
	set {_option} to mj_editfiles_gettext("sb_core", "data.menu.main_upgrade.request.%{_type}%", {_player}, {_value.1}, {_value.2})
	set line {_count} of lore of {_item} to {_option}
	return {_item}
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Menu (Main Upgrade = worldborder)
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_upgrade_worldborder(player: player, id.1: number):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.main_upgrade.button.worldborder.name")
	set {_slot} to mj_editfiles_number("sb_core.upgrade", "data.worldborder.%{_id.1}%.slot")
	set {_world} to mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.1") # revoir
	set {_id.2} to mj_editfiles_number("sb_core.data", "data.world.%{_world}%.upgrade.worldborder")
	set {_value.1} to mj_editfiles_number("sb_core.upgrade", "data.worldborder.%{_id.1}%.size")
	set {_size.1} to mj_editfiles("sb_core.upgrade", "data.worldborder.%{_id.1}%.viewer")
	set {_size.2} to mj_editfiles("sb_core.upgrade", "data.worldborder.%{_id.2}%.viewer")
	set {_level.1} to mj_editfiles_number("sb_core.upgrade", "data.worldborder.%{_id.1}%.level")
	set {_level.2} to mj_editfiles_number("sb_core.data", "data.world.%{_world}%.rate.level")
	set {_price.1} to mj_core_money_converter("sb_core.upgrade", "data.worldborder.%{_id.1}%")
	set {_price.2} to mj_core_money("sb_core.upgrade", "data.worldborder.%{_id.1}%")
	set {_item.1} to mj_skyblock_menu_upgrade_worldborder_item_generator({_player}, {_id.1}, {_size.1}, {_size.2}, {_level.1}, {_level.2}, {_price.2})
	set {_confirm} to false
	if {_id.1} > {_id.2}:
		set {_item.2} to mj_manager_item_button({_player}, {_item.1}, "left_click", "sb_core", "data.menu.main_upgrade.locked")
		set {_money} to mj_essentials_money_modify({_player})
		if {_money} >= {_price.1}:
			if {_level.2} >= {_level.1}:
				if {_id.2} is {_id.1}-1:
					set {_item.2} to mj_manager_item_button({_player}, {_item.1}, "left_click", "sb_core", "data.menu.main_upgrade.unlocked")
					set {_confirm} to true
	else:
		set {_item.2} to mj_manager_item_button({_player}, {_item.1}, "left_click", "sb_core", "data.menu.main_upgrade.buyed")
	make a gui slot {_slot} of {_player} with {_item.2} named {_name} to run:
		if {_confirm} is true:
			{_player} command "/worldborder set %{_value.1}%" with permission "*"
			mj_editfiles_number("sb_core.data", "data.world.%{_world}%.upgrade.worldborder", "modify", {_id.1})
			mj_essentials_money_system({_player}, {_price.1}, false, "upgrade island (worldborder)")
			mj_manager_message({_player}, "sb_core", "data.prefix", "sb_core", "data.menu.main_upgrade.button.worldborder.success", {_size.2}, {_size.1})
			mj_skyblock_menu_upgrade({_player})
		stop
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_upgrade_worldborder_item_generator(player: player, id.1: number, size.1: text, size.2: text, level.1: number, level.2: number, price.1: text) :: item:
	set {_item.1} to mj_manager_item_convert("sb_core.upgrade", "data.worldborder.%{_id.1}%.item")
	set {_item.2} to mj_skyblock_menu_upgrade_item_description({_player}, {_item.1}, "worldborder")
	set {_item.3} to mj_skyblock_menu_upgrade_item_request({_player}, {_item.2}, "border_size", {_size.1}, {_size.2})
	set {_item.4} to mj_skyblock_menu_upgrade_item_request({_player}, {_item.3}, "level", "%{_level.1}%", "%{_level.2}%")
	set {_item.5} to mj_skyblock_menu_upgrade_item_request({_player}, {_item.4}, "price", {_price.1})
	return {_item.5}
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Menu (Main Upgrade = worldborder)
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Menu (Main Upgrade = member)
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_upgrade_member(player: player, id.1: number):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.main_upgrade.button.member.name")
	set {_slot} to mj_editfiles_number("sb_core.upgrade", "data.member.%{_id.1}%.slot")
	set {_world} to mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.1") # revoir
	set {_id.2} to mj_editfiles_number("sb_core.data", "data.world.%{_world}%.upgrade.member")
	set {_size.1} to mj_editfiles_number("sb_core.upgrade", "data.member.%{_id.1}%.count")
	set {_size.2} to mj_editfiles_number("sb_core.upgrade", "data.member.%{_id.2}%.count")
	set {_price.1} to mj_core_money_converter("sb_core.upgrade", "data.member.%{_id.1}%")
	set {_price.2} to mj_core_money("sb_core.upgrade", "data.member.%{_id.1}%")
	set {_item.1} to mj_skyblock_menu_upgrade_member_item_generator({_player}, {_id.1}, {_size.1}, {_size.2}, {_price.2})
	set {_confirm} to false
	if {_id.1} > {_id.2}:
		set {_item.2} to mj_manager_item_button({_player}, {_item.1}, "left_click", "sb_core", "data.menu.main_upgrade.locked")
		set {_money} to mj_essentials_money_modify({_player})
		if {_money} >= {_price.1}:
			if {_id.2} is {_id.1}-1:
				set {_item.2} to mj_manager_item_button({_player}, {_item.1}, "left_click", "sb_core", "data.menu.main_upgrade.unlocked")
				set {_confirm} to true
	else:
		set {_item.2} to mj_manager_item_button({_player}, {_item.1}, "left_click", "sb_core", "data.menu.main_upgrade.buyed")
	make a gui slot {_slot} of {_player} with {_item.2} named {_name} to run:
		if {_confirm} is true:
			mj_editfiles_number("sb_core.data", "data.world.%{_world}%.upgrade.member", "modify", {_id.1})
			mj_essentials_money_system({_player}, {_price.1}, false, "upgrade island (member)")
			mj_manager_message({_player}, "sb_core", "data.prefix", "sb_core", "data.menu.main_upgrade.button.member.success", {_size.2}, {_size.1})
			mj_skyblock_menu_upgrade({_player})
		stop
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_upgrade_member_item_generator(player: player, id.1: number, size.1: number, size.2: number, price.1: text) :: item:
	set {_item.1} to mj_manager_item_convert("sb_core.upgrade", "data.member.%{_id.1}%.item")
	set {_item.2} to mj_skyblock_menu_upgrade_item_description({_player}, {_item.1}, "member")
	set {_item.3} to mj_skyblock_menu_upgrade_item_request({_player}, {_item.2}, "member_size", "%{_size.1}%", "%{_size.2}%")
	set {_item.4} to mj_skyblock_menu_upgrade_item_request({_player}, {_item.3}, "price", {_price.1})
	return {_item.4}
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Menu (Main Upgrade = member)
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Menu (Main Upgrade = warp)
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_upgrade_warp(player: player, id.1: number):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.main_upgrade.button.warp.name")
	set {_slot} to mj_editfiles_number("sb_core.upgrade", "data.warp.%{_id.1}%.slot")
	set {_world} to mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.1") # revoir
	set {_id.2} to mj_editfiles_number("sb_core.data", "data.world.%{_world}%.upgrade.warp")
	set {_size.1} to mj_editfiles_number("sb_core.upgrade", "data.warp.%{_id.1}%.count")
	set {_size.2} to mj_editfiles_number("sb_core.upgrade", "data.warp.%{_id.2}%.count")
	set {_price.1} to mj_core_money_converter("sb_core.upgrade", "data.warp.%{_id.1}%")
	set {_price.2} to mj_core_money("sb_core.upgrade", "data.warp.%{_id.1}%")
	set {_item.1} to mj_skyblock_menu_upgrade_warp_item_generator({_player}, {_id.1}, {_size.1}, {_size.2}, {_price.2})
	set {_confirm} to false
	if {_id.1} > {_id.2}:
		set {_item.2} to mj_manager_item_button({_player}, {_item.1}, "left_click", "sb_core", "data.menu.main_upgrade.locked")
		set {_money} to mj_essentials_money_modify({_player})
		if {_money} >= {_price.1}:
			if {_id.2} is {_id.1}-1:
				set {_item.2} to mj_manager_item_button({_player}, {_item.1}, "left_click", "sb_core", "data.menu.main_upgrade.unlocked")
				set {_confirm} to true
	else:
		set {_item.2} to mj_manager_item_button({_player}, {_item.1}, "left_click", "sb_core", "data.menu.main_upgrade.buyed")
	make a gui slot {_slot} of {_player} with {_item.2} named {_name} to run:
		if {_confirm} is true:
			mj_editfiles_number("sb_core.data", "data.world.%{_world}%.upgrade.warp", "modify", {_id.1})
			mj_essentials_money_system({_player}, {_price.1}, false, "upgrade island (warp)")
			mj_manager_message({_player}, "sb_core", "data.prefix", "sb_core", "data.menu.main_upgrade.button.warp.success", {_size.2}, {_size.1})
			mj_skyblock_menu_upgrade({_player})
		stop
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_upgrade_warp_item_generator(player: player, id.1: number, size.1: number, size.2: number, price.1: text) :: item:
	set {_item.1} to mj_manager_item_convert("sb_core.upgrade", "data.warp.%{_id.1}%.item")
	set {_item.2} to mj_skyblock_menu_upgrade_item_description({_player}, {_item.1}, "warp")
	set {_item.3} to mj_skyblock_menu_upgrade_item_request({_player}, {_item.2}, "warp_size", "%{_size.1}%", "%{_size.2}%")
	set {_item.4} to mj_skyblock_menu_upgrade_item_request({_player}, {_item.3}, "price", {_price.1})
	return {_item.4}
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Menu (Main Upgrade = warp)
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Menu (Main Upgrade)
# =====================================================================================================================
# APIxMJ - Menu (Main Settings)
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_settings(player: player):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.main_settings.title", {_player})
	mj_core_gui_generator({_player}, 6, true, "default", {_name}, "sb_menu_settings")
	mj_skyblock_menu_return({_player}, 49)
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Menu (Main Settings)
# =====================================================================================================================
# APIxMJ - Menu (Main board)
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_board(player: player):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.main_board.title", {_player})
	mj_core_gui_generator({_player}, 6, true, "default", {_name}, "sb_menu_board")
	set {_list::*} to mj_manager_nodes("userdata", "data.%{_player}'s uuid%.source.skyblock.island")
	loop {_list::*}:
		set {_world} to mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.%loop-value%")
		if "%{_player}'s world%" is {_world}:
			mj_skyblock_menu_board_button_generator({_player})
	mj_skyblock_menu_return({_player}, 49)
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_board_button_generator(player: player):
	mj_skyblock_menu_board_island_level({_player})
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_board_island_level(player: player):
	set {_name} to mj_editfiles_gettext("sb_core", "data.menu.main_board.button.island_level.name")
	set {_slot} to mj_editfiles_number("sb_core.menu", "data.main_board.button.island_level.slot")
	set {_item} to mj_manager_item_convert("sb_core.menu", "data.main_board.button.island_level.item")
	set {_level} to mj_skyblock_menu_board_island_level_progress_viewer({_player})
	set {_lang} to mj_manager_userdata_language({_player})
	set {_list::*} to mj_manager_nodes("sb_core.language.%{_lang}%", "data.menu.main_board.button.island_level.lore")
	loop {_list::*}:
		set {_data.2} to mj_editfiles_gettext("sb_core", "data.menu.main_board.button.island_level.lore.%loop-value%", {_player})
		replace "$0" with {_level} in {_data.2}
		set line {_count} of lore of {_item} to {_data.2}
		add 1 to {_count}
	make a gui slot {_slot} of {_player} with {_item} named {_name} to run:
		stop
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_board_island_level_progress_viewer(player: player) :: text:
	set {_world} to mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.1")
	set {_level} to mj_editfiles_number("sb_core.data", "data.world.%{_world}%.rate.level")
	set {_point.1} to mj_editfiles_number("sb_core.data", "data.world.%{_world}%.rate.point")
	set {_max.1} to mj_skyblock_menu_board_island_level_calc({_player})
	set {_pourcent} to 100*{_point.1}/{_max.1}
	set {_bar} to mj_core_progress_bar_viewer({_pourcent}, true)
	set {_result} to mj_editfiles_gettext("sb_core", "data.menu.main_board.progress_bar", {_player})
	set {_point.2} to mj_core_number_convert({_point.1}, ".")
	set {_max.2} to mj_core_number_convert({_max.1}, ".")
	replace "$0" with "%{_level}%" in {_result}
	replace "$1" with "%{_bar}%" in {_result}
	replace "$2" with "%{_point.2}%" in {_result}
	replace "$3" with "%{_max.2}%" in {_result}
	return {_result}
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_menu_board_island_level_calc(player: player) :: number:
	set {_calc.1} to mj_editfiles_number("sb_core.config", "data.calc.island_level.1")
	set {_calc.2} to mj_editfiles_number("sb_core.config", "data.calc.island_level.2")
	set {_calc.3} to mj_editfiles_number("sb_core.config", "data.calc.island_level.3")
	set {_calc.4} to mj_editfiles_number("sb_core.config", "data.calc.island_level.4")
	set {_world} to mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.1")
	set {_level} to mj_editfiles_number("sb_core.data", "data.world.%{_world}%.rate.level")
	set {_result} to {_calc.1}*{_calc.2}+({_level}*{_calc.3}*{_calc.4})
	return {_result}
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Menu (Main board)
# =====================================================================================================================
# APIxMJ - Invitation
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_guest_invite(player: player, target: offlineplayer):
	set {_world.1} to mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.1")
	if "%{_player}'s world%" is {_world.1}:
		set {_owner} to mj_editfiles("sb_core.data", "data.world.%{_world.1}%.owner")
		set {_owner} to {_owner} parsed as offlineplayer
		if {_player} is {_owner}:
			set {_world.2} to mj_editfiles("userdata", "data.%{_target}'s uuid%.source.skyblock.island.1")
			if {_world.2} is "none":
				set {_count} to 0
				set {_list::*} to mj_manager_nodes("userdata")
				loop {_list::*}:
					set {_value} to loop-value
					set {_world.3} to mj_editfiles("userdata", "data.%{_value}%.source.skyblock.island.1")
					if {_world.1} is {_world.3}:
						add 1 to {_count}
				set {_limit.1} to mj_editfiles_number("sb_core.data", "data.world.%{_world}%.upgrade.member")
				set {_limit.2} to mj_editfiles_number("sb_core.upgrade", "data.member.%{_limit.1}%.count")
				if {_count} >= {_limit.2}:
					mj_manager_message({_player}, "sb_core", "data.prefix", "sb_core", "data.guest.request", "%{_target}%")
					mj_manager_message({_target}, "sb_core", "data.prefix", "sb_core", "data.guest.invitation", "%{_player}%")
					mj_core_request({_target}, "sb_core", "data.prefix", "/skyblock join", "/skyblock refuse")
					mj_editfiles("temp", "data.%{_target}'s uuid%.skyblock.guest_request", "modify", {_world.1})
					set {_title} to mj_editfiles_gettext("sb_core", "data.guest.bossbar", {_target}, "%{_player}%")
					mj_core_bossbar({_target}, "cooldown", {_title}, 30)
					wait 30 seconds
					set {_check} to mj_editfiles("temp", "data.%{_target}'s uuid%.skyblock.guest_request")
					if {_check} is set:
						mj_core_bossbar({_target}, "delete")
						mj_editfiles("temp", "data.%{_target}'s uuid%.skyblock.guest_request", "delete")
				else:
					mj_manager_message({_player}, "sb_core", "data.prefix", "sb_core", "data.guest.limite")
			else:
				mj_manager_message({_player}, "sb_core", "data.prefix", "sb_core", "data.guest.no_free_other")
		else:
			mj_manager_message({_player}, "sb_core", "data.prefix", "sb_core", "data.guest.no_owner")
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_guest_join(player: player):
	set {_world.1} to mj_editfiles("temp", "data.%{_player}'s uuid%.skyblock.guest_request")
	if {_world.1} is set:
		set {_world.2} to mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.1")
		if {_world.2} is "none":
			mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.1", "modify", {_world.1})
			set {_owner} to mj_editfiles("sb_core.data", "data.world.%{_world.1}%.owner")
			set {_owner} to {_owner} parsed as offlineplayer
			mj_manager_message({_player}, "sb_core", "data.prefix", "sb_core", "data.guest.join", "%{_owner}%")
			if {_owner} is online:
				mj_manager_message({_owner}, "sb_core", "data.prefix", "sb_core", "data.guest.join_broadcast", "%{_player}%")
			mj_core_bossbar({_player}, "delete")
			mj_editfiles("temp", "data.%{_player}'s uuid%.skyblock.guest_request", "delete")
			clear {_player}'s inventory
			set {_player}'s level to 0
			set {_player}'s xp to 0
			heal {_player}
			set {_player}'s food level to 10
			apply saturation 50 to {_player} for 1 seconds
			set {_preset} to mj_editfiles("sb_core.data", "data.world.%{_world.1}%.preset")
			set {_x} to mj_editfiles_number("sb_core.preset", "data.%{_preset}%.location.x")
			set {_y} to mj_editfiles_number("sb_core.preset", "data.%{_preset}%.location.y")
			set {_z} to mj_editfiles_number("sb_core.preset", "data.%{_preset}%.location.z")
			set {_r} to mj_editfiles_number("sb_core.preset", "data.%{_preset}%.location.r")
			set {_loc} to location({_x}, {_y}, {_z}, ("%{_world.1}%" parsed as world), {_r}, 0)
			teleport {_player} to {_loc}
		else:
			mj_manager_message({_player}, "sb_core", "data.prefix", "sb_core", "data.guest.no_free")
			set {_check} to mj_editfiles("temp", "data.%{_player}'s uuid%.skyblock.guest_request")
			if {_check} is set:
				mj_core_bossbar({_player}, "delete")
				mj_editfiles("temp", "data.%{_player}'s uuid%.skyblock.guest_request", "delete")
	else:
		mj_manager_message({_player}, "sb_core", "data.prefix", "sb_core", "data.guest.no_request")
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_guest_refuse(player: player):
	set {_world.1} to mj_editfiles("temp", "data.%{_player}'s uuid%.skyblock.guest_request")
	if {_world.1} is set:
		mj_manager_message({_player}, "sb_core", "data.prefix", "sb_core", "data.guest.refuse")
		set {_owner} to mj_editfiles("sb_core.data", "data.world.%{_world.1}%.owner")
		set {_owner} to {_owner} parsed as offlineplayer
		if {_owner} is online:
			mj_manager_message({_owner}, "sb_core", "data.prefix", "sb_core", "data.guest.refuse_broadcast")
		mj_core_bossbar({_player}, "delete")
		mj_editfiles("temp", "data.%{_player}'s uuid%.skyblock.guest_request", "delete")
	else:
		mj_manager_message({_player}, "sb_core", "data.prefix", "sb_core", "data.guest.no_request")
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Invitation
# =====================================================================================================================
# APIxMJ - Function
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_island_count(player: player) :: number:
	set {_result} to 0
	set {_list::*} to mj_manager_nodes("sb_core.data", "data.world")
	loop {_list::*}:
		set {_owner} to mj_editfiles("sb_core.data", "data.world.%loop-value%.owner")
		set {_owner} to {_owner} parsed as offlineplayer
		if {_player} is {_owner}:
			add 1 to {_result}
	return {_result}
# ---------------------------------------------------------------------------------------------------------------------
function mj_skyblock_check_island(player: player) :: boolean: # revoir
	set {_result} to false
	set {_world} to mj_editfiles("userdata", "data.%{_player}'s uuid%.source.skyblock.island.1")
	if "%{_player}'s world%" is {_world}:
		set {_result} to true
	return {_result}
# ---------------------------------------------------------------------------------------------------------------------
on join:
	wait 3 seconds
	if player is online:
		set {_world} to mj_editfiles("userdata", "data.%player's uuid%.source.skyblock.island.1")
		if {_world} isn't "none":
			set {_loaded} to mj_editfiles("sb_core.data", "data.world.%{_world}%.loaded")
			if {_loaded} isn't true:
				console command "/mv load %{_world}%"
				mj_editfiles_boolean("sb_core.data", "data.world.%{_world}%.loaded", "modify", true)
	stop
# ---------------------------------------------------------------------------------------------------------------------
on join:
	wait 5 seconds
	set {_world} to mj_editfiles("userdata", "data.%player's uuid%.source.skyblock.island.1")
	if {_world} isn't "none":
		set {_loaded} to mj_editfiles_boolean("sb_core.data", "data.world.%{_world}%.loaded")
		if {_loaded} is true:
			set {_loc} to mj_core_location("sb_core.data", "data.world.%{_world}%.spawn")
			teleport player to {_loc}
		else:
			set {_loc} to mj_core_location("essentials.data", "data.spawn")
			teleport player to {_loc}
	else:
		set {_loc} to mj_core_location("essentials.data", "data.spawn")
		teleport player to {_loc}
	stop
# ---------------------------------------------------------------------------------------------------------------------
on quit:
	wait 5 seconds
	if player is offline:
		set {_world} to mj_editfiles("userdata", "data.%player's uuid%.source.skyblock.island.1")
		if {_world} isn't "none":
			console command "/mv unload %{_world}%"
			mj_editfiles_boolean("sb_core.data", "data.world.%{_world}%.loaded", "modify", false)
	#if player is offline:
	#	set {_world.1} to mj_editfiles("userdata", "data.%player's uuid%.source.skyblock.current_map")
	#	set {_list::*} to mj_manager_nodes("userdata")
	#	loop {_list::*}:
	#		set {_value} to loop-value parsed as offlineplayer
	#		if {_value} is offline:
	#			set {_world.2} to mj_editfiles("userdata", "data.%{_value}'s uuid%.source.skyblock.current_map")
	#
	stop
# ---------------------------------------------------------------------------------------------------------------------
#on load:
	#set {_count} to 0
	#loop all players:
	#	add 1 to {_count}
	#if {_count} is 0:
	#	set {_list::*} to mj_manager_nodes("userdata")
	#	loop {_list::*}:
	#		set {_value} to loop-value parsed as offlineplayer
	#		if {_value} is offline:
	#			set {_world} to mj_editfiles("userdata", "data.%{_value}'s uuid%.source.skyblock.island.1")
	#			if {_world} isn't "none" or "<none>":
	#				console command "/mv unload %{_world}%"
	#				mj_editfiles_boolean("sb_core.data", "data.world.%{_world}%.loaded", "modify", false)
	#stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Function
# =====================================================================================================================
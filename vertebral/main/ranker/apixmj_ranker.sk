# =====================================================================================================================
# APIxMJ - Files
# ---------------------------------------------------------------------------------------------------------------------
function mj_files_ranker():
	set {_folder} to mj_editfiles("manager.data", "data.addon.vertebral_main.ranker.folder")
	load yaml "plugins/APIxMJ/%{_folder}%/config.yml" as "mj.ranker.config"
	load yaml "plugins/APIxMJ/%{_folder}%/data.yml" as "mj.ranker.data"
	loop all players:
		mj_ranker_playerdata(loop-player)
	stop
# ---------------------------------------------------------------------------------------------------------------------
on load:
	set {_list::*} to mj_manager_skript_list()
	if {_list::*} contains "apixmj_manager.sk" and "apixmj.sk":
		send "[APIxMJ] Loading ranker..." to console
		mj_files_ranker()
		mj_editfiles("manager.data", "data.addon.vertebral_main.ranker.version", "modify", "2023.03.05.0001")
	else:
		broadcast "[APIxMJ] Script loading cancel It requires (apixmj_manager.sk and apixmj.sk)"
		unload script file "apixmj_ranker.sk"
	stop
# ---------------------------------------------------------------------------------------------------------------------
on skript stop:
	rename file "plugins/Skript/scripts/apixmj_ranker.sk" to "-apixmj_ranker.sk"
	send "[APIxMJ] Unloading ranker.."
	stop
# ---------------------------------------------------------------------------------------------------------------------
on join:
	if event-entity is player:
		mj_ranker_playerdata(player)
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_ranker_playerdata(player: offlineplayer):
	wait 1 second
	set {_profil} to yaml value "data.%{_player}'s uuid%.profil" from "mj.userdata"
	set {_check1} to yaml value "data.%{_player}'s uuid%.source.ranker" from "mj.userdata"
	if {_check1} isn't set:
		set yaml value "data.%{_player}'s uuid%.source.ranker" from "mj.userdata" to "none"
		save yaml "mj.userdata"
		mj_core_logger(1, "%{_player}% ranker data file was generated..")
	set {_check2} to yaml value "data.source.ranker" from "mj.userdata.%{_player}'s uuid%.%{_profil}%"
	if {_check2} isn't set:
		set yaml value "data.source.ranker" from "mj.userdata.%{_player}'s uuid%.%{_profil}%" to "none"
		save yaml "mj.userdata.%{_player}'s uuid%.%{_profil}%"
		mj_core_logger(1, "%{_player}% ranker data was generated..")
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Files
# =====================================================================================================================
# APIxMJ - Detector
# ---------------------------------------------------------------------------------------------------------------------
on load:
	wait 5 seconds
	set {_default} to true
	loop plugins list:
		if loop-value is "groupmanager":
			set yaml value "data.system.use" from "mj.ranker.config" to loop-value
			set yaml value "data.system.version" from "mj.ranker.config" to version of loop-value
			save yaml "mj.ranker.config"
			mj_core_logger(1, "Ranker : %loop-value% is detected and installed in the configuration")
			set {_default} to false
			exit loop
	if {_default} is true:
		set yaml value "data.system.use" from "mj.ranker.config" to "apixmj"
		set {_version} to mj_editfiles("manager.data", "data.addon.vertebral_main.ranker.version")
		set yaml value "data.system.version" from "mj.ranker.config" to {_version}
		save yaml "mj.ranker.config"
		mj_core_logger(1, "Ranker : Nothing was detected and the default is installed in the configuration")
	wait 2 ticks
	mj_ranker_config()
	stop
# ---------------------------------------------------------------------------------------------------------------------
function mj_ranker_config():
	set {_source} to mj_editfiles("ranker.config", "data.system.use")
	if {_source} is "groupmanager":
		set {_world} to mj_editfiles("config", "data.world.name")
		load yaml "plugins/GroupManager/worlds/%{_world}%/users.yml" as "mj.ranker.users"
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Detector
# =====================================================================================================================
# APIxMJ - Function
# ---------------------------------------------------------------------------------------------------------------------
function mj_ranker(player: offlineplayer, type: text="prefix", color: boolean=true) :: text:
	set {_source} to mj_editfiles("ranker.config", "data.system.use")
	if {_source} is "groupmanager":
		set {_rank1} to mj_editfiles("ranker.users", "users.%{_player}'s uuid%.group")
		set {_rank2} to mj_ranker_convert({_rank1}, {_type}, {_color})
	return {_rank2}
# ---------------------------------------------------------------------------------------------------------------------
function mj_ranker_convert(id: text, type: text="prefix", color: boolean=true) :: text:
	if {_type} is "source":
		set {_rank} to {_id}
	else:
		set {_rank} to mj_editfiles("ranker.data", "data.%{_type}%.%{_id}%")
	if {_color} isn't true:
		set {_rank} to uncolored {_rank}
	if {_rank} isn't set:
		set {_rank} to "default"
	return {_rank}
# ---------------------------------------------------------------------------------------------------------------------
function mj_ranker_modify(player: offlineplayer, rank: text="none"):
	set {_source} to mj_editfiles("ranker.config", "data.system.use")
	if {_source} is "groupmanager":
		console command "/manuadd %{_player}% %{_rank}%"
	mj_ranker_config()
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - Function
# =====================================================================================================================
# APIxMJ - GroupManager
# ---------------------------------------------------------------------------------------------------------------------
on command:
	if command is "manuadd":
		wait 2 ticks
		console command "/manload"
		set {_world} to mj_editfiles("config", "data.world.name")
		load yaml "plugins/GroupManager/worlds/%{_world}%/users.yml" as "mj.ranker.users"
	stop
# ---------------------------------------------------------------------------------------------------------------------
# APIxMJ - GroupManager
# =====================================================================================================================